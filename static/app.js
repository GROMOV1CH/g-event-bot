// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram Web App
const webapp = window.Telegram.WebApp;
webapp.ready();

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–º—ã
document.documentElement.style.setProperty('--tg-theme-bg-color', webapp.backgroundColor);
document.documentElement.style.setProperty('--tg-theme-text-color', webapp.textColor);
document.documentElement.style.setProperty('--tg-theme-button-color', webapp.buttonColor);
document.documentElement.style.setProperty('--tg-theme-button-text-color', webapp.buttonTextColor);

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å API
async function fetchUpcomingEvents() {
    const response = await fetch('/api/events/upcoming');
    const data = await response.json();
    return data.events;
}

async function fetchPastEvents() {
    const response = await fetch('/api/events/past');
    const data = await response.json();
    return data.events;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏–π
function displayEvents(events, containerId) {
    const container = document.getElementById(containerId);
    container.innerHTML = '';

    if (events.length === 0) {
        container.innerHTML = '<p class="no-events">–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</p>';
        return;
    }

    events.forEach(event => {
        const date = new Date(event.date).toLocaleDateString('ru-RU');
        const card = document.createElement('div');
        card.className = 'event-card';
        card.innerHTML = `
            <h3>${event.title}</h3>
            <p class="event-date">${date}</p>
            <p>${event.description}</p>
            ${event.location ? `<p>üìç ${event.location}</p>` : ''}
        `;
        container.appendChild(card);
    });
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫
document.addEventListener('DOMContentLoaded', () => {
    const upcomingBtn = document.getElementById('upcoming-events-btn');
    const pastBtn = document.getElementById('past-events-btn');
    
    if (upcomingBtn) {
        upcomingBtn.addEventListener('click', async () => {
            const events = await fetchUpcomingEvents();
            displayEvents(events, 'events-container');
        });
    }
    
    if (pastBtn) {
        pastBtn.addEventListener('click', async () => {
            const events = await fetchPastEvents();
            displayEvents(events, 'events-container');
        });
    }

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏–µ —Å–æ–±—ã—Ç–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    if (document.getElementById('events-container')) {
        fetchUpcomingEvents().then(events => {
            displayEvents(events, 'events-container');
        });
    }
}); 